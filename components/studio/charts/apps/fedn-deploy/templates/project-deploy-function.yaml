apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: {{ .Values.appname }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: fedn-serve
      project: {{ .Values.project.slug }}
      type: app
      pod: fedn-serve
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8501"
      labels:
        release: {{ .Release.Name }}
        app: fedn-serve
        project: {{ .Values.project.slug }}
        type: app
        pod: fedn-serve
    spec:
      volumes:
      - name: rp-conf
        configMap:
          name: {{ .Release.Name }}-rp-config
      {{ if .Values.model_card.enabled }}
      - name: mc-conf
        configMap:
          name: {{ .Release.Name }}-mc-config
      {{ end }}
      - name: gatekeeper-config
        configMap:
          name: {{ .Release.Name }}-gatekeeper-config
      - name: model-vol
        emptyDir: {}
      {{- with .Values.extraVolumes }}
      {{- tpl . $ | nindent 6 }}
      {{- end }}
      initContainers:
      - name: copy-context
        image: minio/mc
        imagePullPolicy: Always
        command: ["/bin/bash"]
        args: ["-c", "mc config host add projminio $S3_ENDPOINT $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY;mc cp projminio/$STACKN_MODEL_BUCKET/$STACKN_MODEL_FILE /models/model.tar.gz"]
        volumeMounts:
        - name: model-vol
          mountPath: /models
        env:
        {{- range $key, $val := .Values.apps.reducer }}
        - name: S3_ACCESS_KEY_ID
          value: {{ $val.model.access_key }}
        - name: S3_SECRET_ACCESS_KEY
          value: {{ $val.model.secret_key }}
        - name: AWS_REGION
          value: us-east-1
        - name: S3_ENDPOINT
          value: {{ $val.model.url }}
        - name: STACKN_MODEL_BUCKET
          value: {{ $val.model.bucket }}
        - name: STACKN_MODEL_FILE
          value: {{ $val.model.obj }}
        {{- end }}
      - name: extract-context
        image: busybox
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args: ["-c", "cd /models && tar xvf model.tar.gz"]
        volumeMounts:
        - name: model-vol
          mountPath: /models
      - name: copy-model-weights
        image: minio/mc
        imagePullPolicy: Always
        command: ["/bin/bash"]
        args: ["-c", "mc config host add projminio $S3_ENDPOINT $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY;mc cp projminio/fedn-models/$(mc ls projminio/fedn-models | sort | tail -n 1 | awk '{print $5}') /models/client/model-weights"]
        volumeMounts:
        - name: model-vol
          mountPath: /models
        env:
        {{- range $key, $val := .Values.apps.reducer }}
        - name: S3_ACCESS_KEY_ID
          value: {{ $val.s3.access_key }}
        - name: S3_SECRET_ACCESS_KEY
          value: {{ $val.s3.secret_key }}
        - name: AWS_REGION
          value: us-east-1
        - name: S3_ENDPOINT
          value: https://{{ $val.s3.host }}
        - name: STACKN_MODEL_BUCKET
          value: "fedn-models"
        {{- end }}
      containers:
      - name: gatekeeper
        image: {{ .Values.gatekeeper.image }}
        imagePullPolicy: Always
        args:
          - --config=/etc/secrets/gatekeeper.yaml
        ports:
          - containerPort: {{ .Values.gatekeeper.port }}
        volumeMounts:
        - name: gatekeeper-config
          mountPath: /etc/secrets/
      - name: reverse-proxy
        image: nginx:alpine
        imagePullPolicy: Always
        volumeMounts:
        - name: rp-conf
          mountPath: /etc/nginx

      {{ if .Values.model_card.enabled }}
      - name: model-card
        image: nginx:alpine
        imagePullPolicy: Always
        volumeMounts:
        - name: model-vol
          mountPath: /model
        - name: mc-conf
          mountPath: /etc/nginx
      {{ end }}
      - name: serve
        resources:
          limits:
            cpu: {{ .Values.flavor.limits.cpu }}
            memory: {{ .Values.flavor.limits.memory }}
          requests:
            cpu: {{ .Values.flavor.requests.cpu }}
            memory: {{ .Values.flavor.requests.memory }}
        volumeMounts:
        - name: model-vol
          mountPath: /models
        {{- with .Values.extraVolumeMounts }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
        env:
        - name: MODEL_WEIGHTS
          value: model-weights
          {{- with .Values.extraEnv }}
          {{- tpl . $ | nindent 10 }}
          {{- end }}
        image: scaleoutsystems/fedn-deploy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.deployment.port }}