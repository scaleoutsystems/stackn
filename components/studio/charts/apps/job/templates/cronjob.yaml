{{ if .Values.iscron }}
apiVersion: batch/v1beta1
kind: CronJob
{{ else }}
apiVersion: batch/v1
kind: Job
{{ end }}
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    release: {{ .Release.Name }}
    app: job
    project: {{ .Values.project.slug }}
    type: app
    pod: job
spec:
{{ if .Values.iscron }}
  schedule: "{{ .Values.job.schedule }}"
  jobTemplate:
    spec:
{{ end }}
      template:
        metadata:
          labels:
            release: {{ .Release.Name }}
            app: job
            project: {{ .Values.project.slug }}
            type: app
            pod: job
        spec:
          {{ if .Values.resources.gpu.enabled }}
          affinity:
            {{ .Values.affinity | toYaml | nindent 12 | trim }}
          {{ end }}
          restartPolicy: OnFailure
          containers:
          - name: cronjob
            image: {{ .Values.environment.repository }}/{{ .Values.environment.image }}
            command: {{ .Values.job.command }}
            volumeMounts:
            {{- range $key, $value := .Values.apps.volume }}
            - name: {{ $key }}
              mountPath: /home/jovyan/work/{{ $key }}
            {{- end }}
            # - name: jobstorage
            #   mountPath: /home/app/
            # - name: stacknconfig
            #   mountPath: /home/jovyan/.scaleout/
            # - name: projectconfig
            #   mountPath: /home/jovyan/.scaleout/stackn/projects/
            # - name: userconfig
            #   mountPath: /home/jovyan/.scaleout/stackn/
            #   readOnly: true
            imagePullPolicy: Always  
            resources:
              limits:
                cpu: {{ .Values.flavor.limits.cpu }}
                memory: {{ .Values.flavor.limits.memory }}
                {{if .Values.resources.gpu.enabled }}
                nvidia.com/gpu: {{ .Values.resources.requests.gpu }}
                {{ end }}
              requests:
                cpu: {{ .Values.flavor.requests.cpu }}
                memory: {{ .Values.flavor.requests.memory }}
                {{if .Values.resources.gpu.enabled }}
                nvidia.com/gpu: {{ .Values.resources.requests.gpu }}
                {{ end }}
          volumes:
          {{- range $key, $value := .Values.apps.volume }}
          - name: {{ $key }}
            persistentVolumeClaim:
              claimName: {{ $value.release }}
          {{- end }}
          # - name: jobstorage
          #   persistentVolumeClaim:
          #     claimName: {{ .Values.project.slug }}-project-files
          # - name: stacknconfig
          #   configMap:
          #     name: {{ .Values.project.slug }}-project-settings-configmap
          # - name: projectconfig
          #   configMap:
          #     name: {{ .Release.Name }}-project-stackn-settings
          # - name: userconfig
          #   secret:
          #     secretName: {{ .Release.Name }}-project-user-settings
