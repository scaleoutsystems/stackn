apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-minio
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: minio
      project: {{ .Values.project.slug }}
      type: app
      pod: minio
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app: minio
        project: {{ .Values.project.slug }}
        type: app
        pod: minio
    spec:
      containers:
      - args:
        {{- range $key, $value := .Values.apps.volumeK8s }}
        - server
        - /home/stackn/{{ $key }}
        {{- end }}
        env:
        - name: MINIO_ROOT_USER
          value: {{ .Values.credentials.access_key }}
        - name: MINIO_ROOT_PASSWORD
          value: {{ .Values.credentials.secret_key }}
        ports:
          - containerPort: 9000
            name: api-server
          - containerPort: 9001
            name: ui-console
        image: minio/minio:14128-5ee91dc
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/sh"
          - "-ce"
          - "/usr/bin/docker-entrypoint.sh minio server {{ .Values.bucketRoot }} --console-address :{{ .Values.minioConsolePort }}"
        name: {{ .Release.Name }}-minio
        resources: {}
        volumeMounts:
        {{- range $key, $value := .Values.apps.volumeK8s }}
        - name: {{ $key }}
          mountPath: /data
        {{- end }}
      hostname: {{ .Release.Name }}-minio
      restartPolicy: Always
      volumes:
      {{- range $key, $value := .Values.apps.volumeK8s }}
      - name: {{ $key }}
        persistentVolumeClaim:
          claimName: {{ $value.release }}
      {{- end }}
status: {}
