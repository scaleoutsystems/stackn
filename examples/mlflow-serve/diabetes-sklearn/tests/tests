#! /opt/conda/envs/mlflow/bin/python
import fire
from sklearn import datasets
import pandas
import requests
from stackn.auth import get_config
from stackn.get import call_project_endpoint, _find_dict_by_value

def test_model(name='ElasticNet', type='mlflow'):
    config = get_config()

    object_types = call_project_endpoint('objecttypes', conf=config)
    obj_type = _find_dict_by_value(object_types, 'slug', type)

    params = {'object_type': obj_type['id']}
    objects = call_project_endpoint('models', conf=config, params=params)
    print(f"Model objects: {objects}")

    assert len(objects) != 0
    assert objects[0]['name'] == name
    print('Model check succeded. Test passed.')

def test_serve(endpoint):
    diabetes = datasets.load_diabetes()
    data = pandas.DataFrame(diabetes.data)

    data = data.to_json(orient='split')

    config, status = get_config()
    token = config["STACKN_ACCESS_TOKEN"]

    pred = requests.post(endpoint, 
                         headers={"Content-Type": "application/json; format=pandas-split", "Authorization": f"Token {token}"}, 
                         data=data, 
                         verify=False)
    #TODO: check result with expected 
    print(pred.json())

if __name__ == '__main__':
    fire.Fire({"model": test_model,
              "serve": test_serve
              })